// This file was automatically generated by VS extension Windows Machine Learning Code Generator v3
// from model file classifier.onnx
// Warning: This file may get overwritten if you add add an onnx file with the same name
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Windows.Media;
using Windows.Storage;
using Windows.Storage.Streams;
using Windows.AI.MachineLearning;
namespace ModelDemo
{
    
    public sealed class classifierInput
    {
        public ImageFeatureValue input_2; // BitmapPixelFormat: Bgra8, BitmapAlphaMode: Premultiplied, width: 100, height: 100
    }
    
    public sealed class classifierOutput
    {
        public TensorFloat dense_5; // shape(-1,4)
    }
    
    public sealed class classifierModel
    {
        private LearningModel model;
        private LearningModelSession session;
        private LearningModelBinding binding;
        public static async Task<classifierModel> CreateFromStreamAsync(IRandomAccessStreamReference stream)
        {
            classifierModel learningModel = new classifierModel();
            learningModel.model = await LearningModel.LoadFromStreamAsync(stream);
            learningModel.session = new LearningModelSession(learningModel.model);
            learningModel.binding = new LearningModelBinding(learningModel.session);
            return learningModel;
        }
        public async Task<classifierOutput> EvaluateAsync(classifierInput input)
        {
            binding.Bind("input_2", input.input_2);
            var result = await session.EvaluateAsync(binding, "0");
            var output = new classifierOutput();
            output.dense_5 = result.Outputs["dense_5"] as TensorFloat;
            return output;
        }
    }
}

